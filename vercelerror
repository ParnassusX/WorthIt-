
Traceback (most recent call last):
File "/var/task/telegram/request/_baserequest.py", line 334, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/telegram/request/_httpxrequest.py", line 293, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/httpx/_client.py", line 1540, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/httpx/_client.py", line 1629, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/httpx/_client.py", line 1657, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/httpx/_client.py", line 1694, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/httpx/_client.py", line 1730, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/httpx/_transports/default.py", line 394, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/httpcore/_async/connection_pool.py", line 256, in handle_async_request
    raise exc from None
File "/var/task/httpcore/_async/connection_pool.py", line 229, in handle_async_request
    await self._close_connections(closing)
File "/var/task/httpcore/_async/connection_pool.py", line 345, in _close_connections
    await connection.aclose()
File "/var/task/httpcore/_async/connection.py", line 173, in aclose
    await self._connection.aclose()
File "/var/task/httpcore/_async/http11.py", line 258, in aclose
    await self._network_stream.aclose()
File "/var/task/httpcore/_backends/anyio.py", line 53, in aclose
    await self._stream.aclose()
File "/var/task/anyio/streams/tls.py", line 201, in aclose
    await self.transport_stream.aclose()
File "/var/task/anyio/_backends/_asyncio.py", line 1306, in aclose
    self._transport.close()
File "/var/lang/lib/python3.12/asyncio/selector_events.py", line 1210, in close
    super().close()
File "/var/lang/lib/python3.12/asyncio/selector_events.py", line 875, in close
    self._loop.call_soon(self._call_connection_lost, None)
File "/var/lang/lib/python3.12/asyncio/base_events.py", line 795, in call_soon
    self._check_closed()
File "/var/lang/lib/python3.12/asyncio/base_events.py", line 541, in _check_closed
    raise RuntimeError('Event loop is closed')
RuntimeError: Event loop is closed
The above exception was the direct cause of the following exception:
Traceback (most recent call last):
File "/var/task/telegram/ext/_application.py", line 1343, in process_update
    await coroutine
File "/var/task/telegram/ext/_handlers/basehandler.py", line 158, in handle_update
    return await self.callback(update, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/bot/bot.py", line 48, in handle_text
    await update.message.reply_text(help_text, parse_mode="Markdown")
File "/var/task/telegram/_message.py", line 1794, in reply_text
    return await self.get_bot().send_message(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/telegram/ext/_extbot.py", line 2977, in send_message
    return await super().send_message(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/telegram/_bot.py", line 1091, in send_message
    return await self._send_message(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/telegram/ext/_extbot.py", line 618, in _send_message
    result = await super()._send_message(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/telegram/_bot.py", line 803, in _send_message
    result = await self._post(
             ^^^^^^^^^^^^^^^^^
File "/var/task/telegram/_bot.py", line 691, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
File "/var/task/telegram/ext/_extbot.py", line 362, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/telegram/_bot.py", line 720, in _do_post
    result = await request.post(
             ^^^^^^^^^^^^^^^^^^^
File "/var/task/telegram/request/_baserequest.py", line 202, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/telegram/request/_baserequest.py", line 346, in _request_wrapper
    raise NetworkError(f"Unknown error in HTTP implementation: {exc!r}") from exc
telegram.error.NetworkError: Unknown error in HTTP implementation: RuntimeError('Event loop is closed')
ERROR:telegram.ext.Application:No error handlers are registered, logging exception.
127.0.0.1 - - [02/Mar/2025 00:36:28] "POST /webhook HTTP/1.1" 200 -